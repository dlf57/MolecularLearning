'''
Test script to test unorganized representations
'''
# Author: Dakota Folmsbee <dfolmsbee@gmail.com>
# License: GPLv2

import pybel
from molreps.unorganized import Representation
import pytest

mol_file = './tests/butane.sdf'


def test_bty():
    # test bond representation on butane
    mol = next(pybel.readfile('sdf', mol_file))
    rep = Representation('BTY', n_bonds=13)
    bonds = [63010.0, 1.0946, 63063.0, 1.5306, 63010.0, 1.0981, 63010.0, 1.0981, 63063.0, 1.5327, 63010.0, 1.0959,
             63063.0, 1.5306, 63010.0, 1.0959, 63010.0, 1.096, 63010.0, 1.0959, 63010.0, 1.0981, 63010.0, 1.0982, 63010.0, 1.0946]
    assert rep.rep(mol) == bonds

    # test bond representation on butane
    mol = next(pybel.readfile('sdf', mol_file))
    rep = Representation('BTY', n_bonds=14)
    bonds = [63010.0, 1.0919, 63010.0, 1.0919, 63010.0,
             1.0919, 63010.0, 1.0919]
    assert rep.rep(mol) != bonds


def test_baty():
    # test bond/angle representation on butane
    mol = next(pybel.readfile('sdf', mol_file))
    rep = Representation('BATY', n_bonds=13, n_angles=24)
    angles = [63010.0, 1.0946, 63063.0, 1.5306, 63010.0, 1.0981, 63010.0, 1.0981, 63063.0, 1.5327, 63010.0, 1.0959, 63063.0, 1.5306, 63010.0, 1.0959, 63010.0, 1.096, 63010.0, 1.0959, 63010.0, 1.0981, 63010.0, 1.0982, 63010.0, 1.0946, 63063010.0, 111.585, 63010010.0, 107.632, 63010010.0, 107.637, 63063010.0, 111.16, 63063010.0, 111.162, 63010010.0, 107.47, 63063010.0,
              109.559, 63063010.0, 109.561, 63063063.0, 113.246, 63010010.0, 105.91, 63063010.0, 109.152, 63063010.0, 109.15, 63063063.0, 113.246, 63063010.0, 109.15, 63063010.0, 109.149, 63063010.0, 109.561, 63063010.0, 109.563, 63010010.0, 105.907, 63063010.0, 111.155, 63010010.0, 107.473, 63010010.0, 107.639, 63063010.0, 111.161, 63063010.0, 111.585, 63010010.0, 107.633]
    assert rep.rep(mol) == angles


def test_batty():
    # test bond/angle/torsion representation on butane
    mol = next(pybel.readfile('sdf', mol_file))
    rep = Representation('BATTY', n_bonds=13, n_angles=24, n_torsions=27)
    torsions = [63010.0, 1.0946, 63063.0, 1.5306, 63010.0, 1.0981, 63010.0, 1.0981, 63063.0, 1.5327, 63010.0, 1.0959, 63063.0, 1.5306, 63010.0, 1.0959, 63010.0, 1.096, 63010.0, 1.0959, 63010.0, 1.0981, 63010.0, 1.0982, 63010.0, 1.0946, 63063010.0, 111.585, 63010010.0, 107.632, 63010010.0, 107.637, 63063010.0, 111.16, 63063010.0, 111.162, 63010010.0, 107.47, 63063010.0, 109.559, 63063010.0, 109.561, 63063063.0, 113.246, 63010010.0, 105.91, 63063010.0, 109.152, 63063010.0, 109.15, 63063063.0, 113.246, 63063010.0, 109.15, 63063010.0, 109.149, 63063010.0, 109.561, 63063010.0, 109.563, 63010010.0, 105.907, 63063010.0, 111.155, 63010010.0, 107.473, 63010010.0, 107.639, 63063010.0,
                111.161, 63063010.0, 111.585, 63010010.0, 107.633, 10063063010.0, 57.812, 10063063010.0, 177.973, 10063063010.0, -62.356, 10063063010.0, -57.97, 10063063010.0, 62.19, 10063063010.0, -178.138, 63063063010.0, 179.921, 63063063010.0, -59.918, 63063063010.0, 59.753, 63063063063.0, 180.0, 63063063010.0, -57.664, 63063063010.0, 57.662, 63063063010.0, -57.662, 10063063010.0, 64.673, 10063063010.0, -180.0, 63063063010.0, 57.66, 10063063010.0, 179.996, 10063063010.0, -64.678, 63063063010.0, 59.913, 10063063010.0, -62.196, 10063063010.0, -177.978, 63063063010.0, -59.758, 10063063010.0, 178.133, 10063063010.0, 62.351, 63063063010.0, -179.921, 10063063010.0, 57.97, 10063063010.0, -57.812]
    assert rep.rep(mol) == torsions


def test_battynb():
    # test bond/angle/torsion/nonbonding representation on butane
    mol = next(pybel.readfile('sdf', mol_file))
    rep = Representation('BATTYNB', n_bonds=13,
                         n_angles=24, n_torsions=27, n_nb=54)
    nb = [63010.0, 1.0946, 63063.0, 1.5306, 63010.0, 1.0981, 63010.0, 1.0981, 63063.0, 1.5327, 63010.0, 1.0959, 63063.0, 1.5306, 63010.0, 1.0959, 63010.0, 1.096, 63010.0, 1.0959, 63010.0, 1.0981, 63010.0, 1.0982, 63010.0, 1.0946, 63063010.0, 111.585, 63010010.0, 107.632, 63010010.0, 107.637, 63063010.0, 111.16, 63063010.0, 111.162, 63010010.0, 107.47, 63063010.0, 109.559, 63063010.0, 109.561, 63063063.0, 113.246, 63010010.0, 105.91, 63063010.0, 109.152, 63063010.0, 109.15, 63063063.0, 113.246, 63063010.0, 109.15, 63063010.0, 109.149, 63063010.0, 109.561, 63063010.0, 109.563, 63010010.0, 105.907, 63063010.0, 111.155, 63010010.0, 107.473, 63010010.0, 107.639, 63063010.0, 111.161, 63063010.0, 111.585, 63010010.0, 107.633, 10063063010.0, 57.812, 10063063010.0, 177.973, 10063063010.0, -62.356, 10063063010.0, -57.97, 10063063010.0, 62.19, 10063063010.0, -178.138, 63063063010.0, 179.921, 63063063010.0, -59.918, 63063063010.0, 59.753, 63063063063.0, 180.0, 63063063010.0, -57.664, 63063063010.0, 57.662, 63063063010.0, -57.662, 10063063010.0, 64.673, 10063063010.0, -180.0, 63063063010.0, 57.66, 10063063010.0, 179.996, 10063063010.0, -
          64.678, 63063063010.0, 59.913, 10063063010.0, -62.196, 10063063010.0, -177.978, 63063063010.0, -59.758, 10063063010.0, 178.133, 10063063010.0, 62.351, 63063063010.0, -179.921, 10063063010.0, 57.97, 10063063010.0, -57.812, 63063.0, 3.9273, 63010.0, 2.78, 63010.0, 2.78, 63010.0, 4.2516, 63010.0, 4.2523, 63010.0, 4.7372, 63010.0, 2.8257, 63010.0, 2.8268, 63010.0, 3.5112, 63010.0, 2.827, 63010.0, 2.8257, 63010.0, 3.5112, 63010.0, 4.2524, 63010.0, 4.2515, 63010.0, 4.7372, 63010.0, 2.78, 63010.0, 2.7801, 10010.0, 2.5279, 10010.0, 3.0808, 10010.0, 3.142, 10010.0, 2.6022, 10010.0, 4.4736, 10010.0, 4.8107, 10010.0, 4.937, 10010.0, 3.0807, 10010.0, 2.5289, 10010.0, 2.6008, 10010.0, 3.14, 10010.0, 4.8093, 10010.0, 4.4735, 10010.0, 4.9362, 10010.0, 2.5068, 10010.0, 2.5058, 10010.0, 3.7861, 10010.0, 3.7867, 10010.0, 4.9362, 10010.0, 4.9368, 10010.0, 5.644, 10010.0, 3.0629, 10010.0, 2.5117, 10010.0, 2.6009, 10010.0, 3.1419, 10010.0, 3.7861, 10010.0, 2.5117, 10010.0, 3.063, 10010.0, 3.1401, 10010.0, 2.6021, 10010.0, 3.7868, 10010.0, 3.0808, 10010.0, 2.5279, 10010.0, 2.5068, 10010.0, 2.529, 10010.0, 3.0808, 10010.0, 2.5058]
    assert rep.rep(mol) == nb
